(self.webpackChunkstardust_website=self.webpackChunkstardust_website||[]).push([[993],{3905:function(t,e,r){"use strict";r.d(e,{Zo:function(){return l},kt:function(){return f}});var n=r(7294);function o(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}function i(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),r.push.apply(r,n)}return r}function a(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?i(Object(r),!0).forEach((function(e){o(t,e,r[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(r,e))}))}return t}function c(t,e){if(null==t)return{};var r,n,o=function(t,e){if(null==t)return{};var r,n,o={},i=Object.keys(t);for(n=0;n<i.length;n++)r=i[n],e.indexOf(r)>=0||(o[r]=t[r]);return o}(t,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);for(n=0;n<i.length;n++)r=i[n],e.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(t,r)&&(o[r]=t[r])}return o}var s=n.createContext({}),p=function(t){var e=n.useContext(s),r=e;return t&&(r="function"==typeof t?t(e):a(a({},e),t)),r},l=function(t){var e=p(t.components);return n.createElement(s.Provider,{value:e},t.children)},u={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},d=n.forwardRef((function(t,e){var r=t.components,o=t.mdxType,i=t.originalType,s=t.parentName,l=c(t,["components","mdxType","originalType","parentName"]),d=p(r),f=o,m=d["".concat(s,".").concat(f)]||d[f]||u[f]||i;return r?n.createElement(m,a(a({ref:e},l),{},{components:r})):n.createElement(m,a({ref:e},l))}));function f(t,e){var r=arguments,o=e&&e.mdxType;if("string"==typeof t||o){var i=r.length,a=new Array(i);a[0]=d;var c={};for(var s in e)hasOwnProperty.call(e,s)&&(c[s]=e[s]);c.originalType=t,c.mdxType="string"==typeof t?t:o,a[1]=c;for(var p=2;p<i;p++)a[p]=r[p];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},9255:function(t,e,r){"use strict";r.r(e),r.d(e,{frontMatter:function(){return c},contentTitle:function(){return s},metadata:function(){return p},toc:function(){return l},default:function(){return d}});var n=r(2122),o=r(9756),i=(r(7294),r(3905)),a=["components"],c={},s="/input",p={unversionedId:"stardust-protocol/server/objects/input",id:"stardust-protocol/server/objects/input",isDocsHomePage:!1,title:"/input",description:"Object managing input and interaction.",source:"@site/docs/stardust-protocol/server/objects/input.md",sourceDirName:"stardust-protocol/server/objects",slug:"/stardust-protocol/server/objects/input",permalink:"/docs/stardust-protocol/server/objects/input",editUrl:"https://github.com/StardustXR/website/edit/main/docs/stardust-protocol/server/objects/input.md",version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"/hmd",permalink:"/docs/stardust-protocol/server/objects/hmd"},next:{title:"/lifecycle",permalink:"/docs/stardust-protocol/server/objects/lifecycle"}},l=[{value:"Signals",id:"signals",children:[{value:"<code>registerInputHandler(string name, string field, string spacePath, Vector3 position, Quat rotation, string callbackPath, string callbackMethod)</code>",id:"registerinputhandlerstring-name-string-field-string-spacepath-vector3-position-quat-rotation-string-callbackpath-string-callbackmethod",children:[]}]}],u={toc:l};function d(t){var e=t.components,r=(0,o.Z)(t,a);return(0,i.kt)("wrapper",(0,n.Z)({},u,r,{components:e,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"input"},"/input"),(0,i.kt)("p",null,"Object managing input and interaction."),(0,i.kt)("h2",{id:"signals"},"Signals"),(0,i.kt)("h3",{id:"registerinputhandlerstring-name-string-field-string-spacepath-vector3-position-quat-rotation-string-callbackpath-string-callbackmethod"},(0,i.kt)("inlineCode",{parentName:"h3"},"registerInputHandler(string name, string field, string spacePath, Vector3 position, Quat rotation, string callbackPath, string callbackMethod)")),(0,i.kt)("p",null,"Creates a new ",(0,i.kt)("a",{parentName:"p",href:"/docs/stardust-protocol/server/types/input/InputHandler"},"InputHandler")," with the specified ",(0,i.kt)("inlineCode",{parentName:"p"},"name")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"field"),", located relative to the space referenced in ",(0,i.kt)("inlineCode",{parentName:"p"},"spacePath")," and the ",(0,i.kt)("inlineCode",{parentName:"p"},"postion")," + ",(0,i.kt)("inlineCode",{parentName:"p"},"rotation"),"."))}d.isMDXComponent=!0}}]);